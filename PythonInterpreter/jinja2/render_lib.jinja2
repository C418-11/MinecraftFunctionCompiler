{% macro print_line(selector, color, jsontext) 
%}tellraw {{selector}} {"text": "", "color": "{{color}}", "extra": [{{RAWJSON.Prefix}}, " ", {{jsontext}} ]}{%
endmacro %}

{% set translate = TextC.translate %}
{% set run_command = TextC.clickEvent.run_command %}
{% set suggest_command = TextC.clickEvent.suggest_command %}
{% set show_text = TextC.hoverEvent.show_text %}

{% macro translate_content(translate_key, fallback, click_event, hover_translate_key, hover_fallback) 
%}{{translate(translate_key, fallback, click_event=click_event, hover_event=show_text(translate(hover_translate_key, hover_fallback)))}}{%
endmacro %}

{% macro option(color, translate_key, fallback, click_event, hover_translate_key, hover_fallback, hover_event) %}{%
if hover_event
%}{{print_line("@s", color, translate(translate_key, fallback, click_event=click_event, hover_event=hover_event))}}{%
else
%}{{print_line("@s", color, translate_content(translate_key, fallback, click_event, hover_translate_key, hover_fallback))}}{%
endif %}{% endmacro %}

{% macro option_title(color, translate_key, fallback, click_run)
%}{{print_line("@s", color, translate_content(translate_key, fallback, run_command(click_run), "options.back"))}}{%
endmacro %}

{% macro run_pyifunc(function_path, is_tag) %}{%
if is_tag 
%}{{run_command("function #python_interpreter:"+function_path)}}{%
else
%}{{run_command("function python_interpreter:"+function_path)}}{%
endif %}{% endmacro %}

{% macro suggest_pyifunc(function_path, is_tag) %}{%
if is_tag 
%}{{suggest_command("/function #python_interpreter:"+function_path)}}{%
else
%}{{suggest_command("/function python_interpreter:"+function_path)}}{%
endif %}{% endmacro %}

{% macro hover_storage(storage, nbt_path)
%}{{
show_text([
    translate("options.hover_event.now_value", "(静态)当前值: ", color="yellow"),
    TextC.nbt("storage", nbt_path, storage=storage, color="aqua")
])
}}{%
endmacro %}

{% macro hover_storage_with_cache(storage, nbt_path, cache_name, cache_objective)
%}{{
show_text(translate(
    "options.hover_event.value_with_cache","§e(静态)当前值: %s§r |-> §c计分板缓存: %s",
    with_txt=[
        TextC.nbt("storage", nbt_path, storage=storage, color="aqua"),
        TextC.score(cache_objective, cache_name, color="aqua")
    ]
))
}}{%
endmacro %}